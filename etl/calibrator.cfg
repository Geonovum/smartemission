# Smart Emission Data Extract ETL - Stetl config
#
# Pieter Marsman - 2016
#
# This config reads the raw timeseries measurements from the DB, and RIVM
# timeseries from their API, merges those and uses it to create a calibration
# model.

# The main Stetl ETL chain
[etl]
chains = input_rivm|input_jose|merge|calibrate|(output_model)(vis1)(vis2)(vis3)(vis4)

[input_rivm]
class = influxdbinput.CalibrationInfluxDbInput
method = POST
content_type = application/x-www-form-urlencoded
host = {influx_host}
port = {influx_port}
database = {influx_se_database}
user = {influx_se_writer}
password = {influx_se_writer_password}
# currently assuming that all components from influxdb are predicted
query = SELECT time, component, geohash, value FROM {influx_se_measurement_rivm} WHERE {calibration_location_geohash} AND time > '%s' LIMIT {calibrator_max_input_records}
key = rivm
cache_result = True
output_format = record

[input_jose]
class = influxdbinput.CalibrationInfluxDbInput
input_format = record
method = POST
content_type = application/x-www-form-urlencoded
host = {influx_host}
port = {influx_port}
database = {influx_se_database}
user = {influx_se_writer}
password = {influx_se_writer_password}
# currently assuming that all components from influxdb are used
query = SELECT time, component, geohash, value FROM {influx_se_measurement_extract} WHERE {calibration_location_geohash} AND time > '%s' LIMIT {calibrator_max_input_records}
key = jose
cache_result = True
output_format = record

[merge]
class = calibration.MergeRivmJose
input = record
output = record_array

[calibrate]
class = calibration.Calibrator
input = record_array
targets = {calibration_components}
inverse_sample_fraction = 50
random_search_iterations = 50
cv_k = 10
output = record
n_jobs = 1
inverse_filter_alpha=20

[output_model]
class = calibration.CalibrationModelOutput
input_format = record
host = {pg_host}
database = {pg_database}
user = {pg_user}
password = {pg_password}
schema = {pg_schema_calibrated}
table = calibration_models

[vis1]
class = calibration.PerformanceVisualization
input = record
clear_output_folder = True
file_path = calibration/%s/%s

[vis2]
class = calibration.ModelVisualization
input = record
file_path = calibration/%s/%s

[vis3]
class = calibration.DataVisualization
input = record
file_path = calibration/%s/%s

[vis4]
class = calibration.SearchVisualization
input = record
file_path = calibration/%s/%s

# for testing/debugging
[output_std]
class = outputs.standardoutput.StandardOutput