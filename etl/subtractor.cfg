# Smart Emission Data Subtract ETL - Stetl config
#
# Just van den Broecke - 2016
#
# This config reads the raw timeseries measurements from the DB,
# validates the measurements and subtract these results to standard output

# The main Stetl ETL chain
[etl]
# chains = input_raw_sensor_db|subtract_filter|output_file
chains = input_raw_sensor_db|subtract_filter|output_influxdb_write

# read raw data from timeseries table
[input_raw_sensor_db]
class = smartemdb.RawDbInput
host = {pg_host}
database = {pg_database}
user = {pg_user}
password = {pg_password}
schema = {pg_schema_raw}
table = timeseries
output_format = record
last_gid_query = SELECT gid_raw from smartem_refined.refiner_progress
max_input_records = {refiner_max_input_records}
gids_query = SELECT gid from timeseries WHERE gid > %d AND gid <= %d AND device_id IN (9) ORDER BY gid
data_query = SELECT * from timeseries WHERE gid = %d

# Subtracts raw records for specified sensor names
[subtract_filter]
class = subtractor.SubtractFilter
sensor_names = temperature,humidity,pressure,co2,o3raw,coraw,no2raw
# sensor_names = temperature,humidity,pressure,noiseavg,noiselevelavg,co2,o3,co,no2,o3raw,coraw,no2raw

# Saves to file
[output_file]
class = datasetoutput.CsvFileOutput
file_path = pandas_output.txt

# Write records to InfluxDB server
[output_influxdb_write]
class = influxdboutput.InfluxDbOutput
input_format = record_array
method = POST
list_fanout = False
content_type = application/x-www-form-urlencoded
host = {influx_host}
port = {influx_port}
database = {influx_se_database}
measurement = {influx_se_measurement_extract}
tags_map = {{'station': 'device_id', 'component': 'name'}}
fields_map = {{'value': 'value'}}
time_attr = time
# geohash_map = {{'lat': 'lat', 'lon': 'lon' }}
geohash_wkt_attr = point
user = {influx_se_writer}
password = {influx_se_writer_password}
